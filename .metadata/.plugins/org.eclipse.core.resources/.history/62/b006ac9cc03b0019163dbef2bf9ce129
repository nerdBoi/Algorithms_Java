package Algorithms;

public class Arrays_Strings {

//	Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. 
//	An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. 
//	You may assume all four edges of the grid are all surrounded by water.
	char[][] visited;
	public int numIslands(char[][] grid) {
		visited = grid.clone();
		int count = 0;

		for (int i = 0; i < visited.length; i++) {
			for (int j = 0; j < visited[i].length; j++) {
				if (grid[i][j] == '1' && visited[i][j] != 'x') {
					count++;
					runOutIsland(i, j);
				}
			}
		}
		return count;
	}

	public void runOutIsland(int x, int y) {
		visited[x][y] = 'x';
		if (x > 0) {
			if (visited[x-1][y] == '1')
				runOutIsland(x-1, y);
		}
		if (y > 0) {
			if (visited[x][y-1] == '1')
				runOutIsland(x,y-1);
		}
		if (x < visited.length - 1) {
			if (visited[x+1][y] == '1')
				runOutIsland(x+1, y);
		}
		if (y < visited[x].length - 1) {
			if (visited[x][y+1] == '1')
				runOutIsland(x,y+1);
		}
	}
}
